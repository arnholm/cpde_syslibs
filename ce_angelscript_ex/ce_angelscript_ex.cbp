<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<CodeBlocks_project_file>
	<FileVersion major="1" minor="6" />
	<Project>
		<Option title="ce_angelscript_ex" />
		<Option pch_mode="2" />
		<Option compiler="msvc" />
		<Option virtualFolders="iostream/;as_xml/" />
		<Build>
			<Target title="MSVC_Debug">
				<Option output=".cmp/msvc/ce_angelscript_exd" prefix_auto="1" extension_auto="1" />
				<Option working_dir="" />
				<Option object_output=".cmp/msvc/obj/Debug/" />
				<Option type="2" />
				<Option compiler="msvc" />
				<Option createDefFile="1" />
				<Compiler>
					<Add option="/MDd" />
					<Add option="/EHs" />
					<Add option="/GR" />
					<Add option="/GF" />
					<Add option="/Od" />
					<Add option="/W3" />
					<Add option="/RTCsu" />
					<Add option="/Fd$(TARGET_OUTPUT_DIR)$(TARGET_OUTPUT_BASENAME).pdb" />
					<Add option="/EHsc" />
					<Add option="`$(CPDE_USR)\bin\wx-config.exe --prefix=$(#wx) --wxcfg=$(#wx.debug) --iso --cxxflags`" />
					<Add option="/D_CRT_SECURE_NO_WARNINGS" />
					<Add option="/D_CRT_NONSTDC_NO_DEPRECATE" />
					<Add option="/D_CRT_SECURE_DEPRECATE" />
					<Add directory="./" />
				</Compiler>
				<ExtraCommands>
					<Add after="$(CPDE_USR)/bin/cpde_usr -project=$(PROJECT_NAME)  -root=$(PROJECT_DIR)  -build=$(TARGET_NAME)  -target=$(TARGET_OUTPUT_FILE)  -usr=$(CPDE_USR)" />
					<Mode after="always" />
				</ExtraCommands>
			</Target>
			<Target title="MSVC_Release">
				<Option output=".cmp/msvc/ce_angelscript_ex" prefix_auto="1" extension_auto="1" />
				<Option working_dir="" />
				<Option object_output=".cmp/msvc/obj/Release/" />
				<Option type="2" />
				<Option compiler="msvc" />
				<Option createDefFile="1" />
				<Compiler>
					<Add option="/MD" />
					<Add option="/EHs" />
					<Add option="/GR" />
					<Add option="/GF" />
					<Add option="/Ox" />
					<Add option="/W3" />
					<Add option="/EHsc" />
					<Add option="`$(CPDE_USR)\bin\wx-config.exe --prefix=$(#wx) --wxcfg=$(#wx.release) --iso --cxxflags`" />
					<Add option="/D_CRT_SECURE_NO_WARNINGS" />
					<Add option="/D_CRT_NONSTDC_NO_DEPRECATE" />
					<Add option="/D_CRT_SECURE_DEPRECATE" />
					<Add directory="./" />
				</Compiler>
				<ExtraCommands>
					<Add after="$(CPDE_USR)/bin/cpde_usr -project=$(PROJECT_NAME)  -root=$(PROJECT_DIR)  -build=$(TARGET_NAME)  -target=$(TARGET_OUTPUT_FILE)  -usr=$(CPDE_USR)" />
					<Mode after="always" />
				</ExtraCommands>
			</Target>
			<Target title="GCC_Debug">
				<Option output=".cmp/gcc/ce_angelscript_exd" prefix_auto="1" extension_auto="1" />
				<Option working_dir="" />
				<Option object_output=".cmp/gcc/obj/Debug/" />
				<Option type="2" />
				<Option compiler="gcc" />
				<Option createDefFile="1" />
				<Compiler>
					<Add option="-std=c++0x" />
					<Add option="-W" />
					<Add option="-fPIC" />
					<Add option="-DNOPCH" />
					<Add option="-fexceptions" />
					<Add option="-D_DEBUG" />
					<Add option="-g" />
					<Add directory="./" />
				</Compiler>
				<ExtraCommands>
					<Add after="$(CPDE_USR)/bin/cpde_usr -project=$(PROJECT_NAME)  -root=$(PROJECT_DIR)  -build=$(TARGET_NAME)  -target=$(TARGET_OUTPUT_FILE)  -usr=$(CPDE_USR)" />
					<Mode after="always" />
				</ExtraCommands>
			</Target>
			<Target title="GCC_Release">
				<Option output=".cmp/gcc/ce_angelscript_ex" prefix_auto="1" extension_auto="1" />
				<Option working_dir="" />
				<Option object_output=".cmp/gcc/obj/Release/" />
				<Option type="2" />
				<Option compiler="gcc" />
				<Option createDefFile="1" />
				<Compiler>
					<Add option="-std=c++0x" />
					<Add option="-W" />
					<Add option="-fPIC" />
					<Add option="-DNOPCH" />
					<Add option="-fexceptions" />
					<Add option="-Os" />
					<Add directory="./" />
				</Compiler>
				<ExtraCommands>
					<Add after="$(CPDE_USR)/bin/cpde_usr -project=$(PROJECT_NAME)  -root=$(PROJECT_DIR)  -build=$(TARGET_NAME)  -target=$(TARGET_OUTPUT_FILE)  -usr=$(CPDE_USR)" />
					<Mode after="always" />
				</ExtraCommands>
			</Target>
		</Build>
		<Compiler>
			<Add option="-DCE_ANGELSCRIPT_EX_IMPLEMENTATION" />
			<Add directory="$(CPDE_USR)/include" />
			<Add directory="$(#boost.include)" />
		</Compiler>
		<Unit filename="ASIStream.cpp">
			<Option virtualFolder="iostream/" />
		</Unit>
		<Unit filename="ASIStream.h">
			<Option virtualFolder="iostream/" />
		</Unit>
		<Unit filename="ASOStream.cpp">
			<Option virtualFolder="iostream/" />
		</Unit>
		<Unit filename="ASOStream.h">
			<Option virtualFolder="iostream/" />
		</Unit>
		<Unit filename="ASStreams.cpp">
			<Option virtualFolder="iostream/" />
		</Unit>
		<Unit filename="ASStreams.h">
			<Option virtualFolder="iostream/" />
		</Unit>
		<Unit filename="as_assert.cpp" />
		<Unit filename="as_assert.h" />
		<Unit filename="as_class.cpp">
			<Option virtualFolder="as_xml/" />
		</Unit>
		<Unit filename="as_class.h">
			<Option virtualFolder="as_xml/" />
		</Unit>
		<Unit filename="as_constructor.cpp">
			<Option virtualFolder="as_xml/" />
		</Unit>
		<Unit filename="as_constructor.h">
			<Option virtualFolder="as_xml/" />
		</Unit>
		<Unit filename="as_description.cpp">
			<Option virtualFolder="as_xml/" />
		</Unit>
		<Unit filename="as_description.h">
			<Option virtualFolder="as_xml/" />
		</Unit>
		<Unit filename="as_doc.cpp">
			<Option virtualFolder="as_xml/" />
		</Unit>
		<Unit filename="as_doc.h">
			<Option virtualFolder="as_xml/" />
		</Unit>
		<Unit filename="as_factory.cpp" />
		<Unit filename="as_factory.h" />
		<Unit filename="as_file.cpp" />
		<Unit filename="as_file.h" />
		<Unit filename="as_include_callback.cpp" />
		<Unit filename="as_include_callback.h" />
		<Unit filename="as_initializer_vector.cpp" />
		<Unit filename="as_initializer_vector.h" />
		<Unit filename="as_line.cpp">
			<Option virtualFolder="as_xml/" />
		</Unit>
		<Unit filename="as_line.h">
			<Option virtualFolder="as_xml/" />
		</Unit>
		<Unit filename="as_member_function.cpp">
			<Option virtualFolder="as_xml/" />
		</Unit>
		<Unit filename="as_member_function.h">
			<Option virtualFolder="as_xml/" />
		</Unit>
		<Unit filename="as_parameter.cpp">
			<Option virtualFolder="as_xml/" />
		</Unit>
		<Unit filename="as_parameter.h">
			<Option virtualFolder="as_xml/" />
		</Unit>
		<Unit filename="as_reftype.cpp" />
		<Unit filename="as_reftype.h" />
		<Unit filename="as_return.cpp">
			<Option virtualFolder="as_xml/" />
		</Unit>
		<Unit filename="as_return.h">
			<Option virtualFolder="as_xml/" />
		</Unit>
		<Unit filename="as_typeid.cpp" />
		<Unit filename="as_typeid.h" />
		<Unit filename="as_vector.cpp" />
		<Unit filename="as_vector.h" />
		<Unit filename="as_xml.cpp">
			<Option virtualFolder="as_xml/" />
		</Unit>
		<Unit filename="as_xml.h">
			<Option virtualFolder="as_xml/" />
		</Unit>
		<Unit filename="ce_angelscript_ex_config.h" />
		<Extensions>
			<code_completion />
			<envvars />
			<debugger />
			<lib_finder disable_auto="1" />
		</Extensions>
	</Project>
</CodeBlocks_project_file>
