#------------------------------------------------------------------------------------------------------
# This makefile was generated by 'cbp2make' tool rev.147 from Code::Blocks .cbp file + manually edited 
# The makefile has been tested on Linux Kubuntu 14.10 64bit using g++4.9.1               
# Carsten Arnholm, January 2015
#
# NOTE: edit the paths to MessagePack and Boost libraries here 
#
MSGPACK_INCLUDE = /usr/local
BOOST_INCLUDE   = /usr/local
#------------------------------------------------------------------------------------------------------

WORKDIR = `pwd`

CC1 = gcc
CXX1 = g++
AR = ar
LD = g++
WINDRES = windres

INC1    =  -I$(BOOST_INCLUDE) -I$(MSGPACK_INCLUDE)
CFLAGS1 = -DOP_LITE_IMPLEMENTATION -DSQLITE_ENABLE_COLUMN_METADATA -Os -std=c++0x -W -fPIC -fexceptions -DNOPCH -Wno-literal-suffix -Wno-unused-local-typedefs
RESINC1 = 
LIBDIR1 = 
LIB1 = 
LDFLAGS1 = 

INC_GCC_RELEASE = $(INC1)
CFLAGS_GCC_RELEASE = $(CFLAGS1) -Os -std=c++0x -W -fPIC -fexceptions -DNOPCH
RESINC_GCC_RELEASE = $(RESINC1)
RCFLAGS_GCC_RELEASE = $(RCFLAGS1)
LIBDIR_GCC_RELEASE = $(LIBDIR1)
LIB_GCC_RELEASE = $(LIB1)-ldl
LDFLAGS_GCC_RELEASE = $(LDFLAGS1)
OBJDIR_GCC_RELEASE = .cmp/gcc/obj/Release
DEP_GCC_RELEASE = 
OUT_GCC_RELEASE = .cmp/gcc/bin/Release/libop_lite.so

OBJ_GCC_RELEASE = $(OBJDIR_GCC_RELEASE)/sqColumn.o $(OBJDIR_GCC_RELEASE)/sqBlob.o $(OBJDIR_GCC_RELEASE)/op_vector.o $(OBJDIR_GCC_RELEASE)/op_value.o $(OBJDIR_GCC_RELEASE)/op_unique_ptr.o $(OBJDIR_GCC_RELEASE)/op_type_factory.o $(OBJDIR_GCC_RELEASE)/op_transaction.o $(OBJDIR_GCC_RELEASE)/op_root.o $(OBJDIR_GCC_RELEASE)/op_ptr.o $(OBJDIR_GCC_RELEASE)/sqlite3/sqlite3.o $(OBJDIR_GCC_RELEASE)/sqValue.o $(OBJDIR_GCC_RELEASE)/sqTransaction.o $(OBJDIR_GCC_RELEASE)/sqTable.o $(OBJDIR_GCC_RELEASE)/sqStatement.o $(OBJDIR_GCC_RELEASE)/sqRow.o $(OBJDIR_GCC_RELEASE)/sqRef.o $(OBJDIR_GCC_RELEASE)/sqQuery.o $(OBJDIR_GCC_RELEASE)/sqDatabase.o $(OBJDIR_GCC_RELEASE)/lzmalib/LzmaLib.o $(OBJDIR_GCC_RELEASE)/lzmalib/LzmaDec.o $(OBJDIR_GCC_RELEASE)/lzmalib/LzFind.o $(OBJDIR_GCC_RELEASE)/lzmalib/Alloc.o $(OBJDIR_GCC_RELEASE)/op_packed.o $(OBJDIR_GCC_RELEASE)/op_object.o $(OBJDIR_GCC_RELEASE)/op_new.o $(OBJDIR_GCC_RELEASE)/op_map.o $(OBJDIR_GCC_RELEASE)/op_manager.o $(OBJDIR_GCC_RELEASE)/lzmalib/op_lzma.o $(OBJDIR_GCC_RELEASE)/op_database.o $(OBJDIR_GCC_RELEASE)/op_class_name.o $(OBJDIR_GCC_RELEASE)/op_class_factory.o $(OBJDIR_GCC_RELEASE)/miniz/op_miniz.o

all: gcc_release

clean: clean_gcc_release

before_gcc_release: 
	test -d .cmp/gcc/bin/Release || mkdir -p .cmp/gcc/bin/Release
	test -d $(OBJDIR_GCC_RELEASE) || mkdir -p $(OBJDIR_GCC_RELEASE)
	test -d $(OBJDIR_GCC_RELEASE)/sqlite3 || mkdir -p $(OBJDIR_GCC_RELEASE)/sqlite3
	test -d $(OBJDIR_GCC_RELEASE)/lzmalib || mkdir -p $(OBJDIR_GCC_RELEASE)/lzmalib
	test -d $(OBJDIR_GCC_RELEASE)/miniz   || mkdir -p $(OBJDIR_GCC_RELEASE)/miniz

after_gcc_release: 
#	$(CPDE_USR)/bin/cpde_usr -dll -project=$(PROJECT_NAME)  -root=$(PROJECT_DIR)  -build=$(TARGET_NAME)  -target=$(TARGET_OUTPUT_FILE)  -usr=$(CPDE_USR)

gcc_release: before_gcc_release out_gcc_release after_gcc_release

out_gcc_release: before_gcc_release $(OBJ_GCC_RELEASE) $(DEP_GCC_RELEASE)
	$(LD) -shared $(LIBDIR_GCC_RELEASE) $(OBJ_GCC_RELEASE)  -o $(OUT_GCC_RELEASE) $(LDFLAGS_GCC_RELEASE) $(LIB_GCC_RELEASE)

$(OBJDIR_GCC_RELEASE)/sqColumn.o: sqColumn.cpp
	$(CXX1) $(CFLAGS_GCC_RELEASE) $(INC_GCC_RELEASE) -c sqColumn.cpp -o $(OBJDIR_GCC_RELEASE)/sqColumn.o

$(OBJDIR_GCC_RELEASE)/sqBlob.o: sqBlob.cpp
	$(CXX1) $(CFLAGS_GCC_RELEASE) $(INC_GCC_RELEASE) -c sqBlob.cpp -o $(OBJDIR_GCC_RELEASE)/sqBlob.o

$(OBJDIR_GCC_RELEASE)/op_vector.o: op_vector.cpp
	$(CXX1) $(CFLAGS_GCC_RELEASE) $(INC_GCC_RELEASE) -c op_vector.cpp -o $(OBJDIR_GCC_RELEASE)/op_vector.o

$(OBJDIR_GCC_RELEASE)/op_value.o: op_value.cpp
	$(CXX1) $(CFLAGS_GCC_RELEASE) $(INC_GCC_RELEASE) -c op_value.cpp -o $(OBJDIR_GCC_RELEASE)/op_value.o

$(OBJDIR_GCC_RELEASE)/op_unique_ptr.o: op_unique_ptr.cpp
	$(CXX1) $(CFLAGS_GCC_RELEASE) $(INC_GCC_RELEASE) -c op_unique_ptr.cpp -o $(OBJDIR_GCC_RELEASE)/op_unique_ptr.o

$(OBJDIR_GCC_RELEASE)/op_type_factory.o: op_type_factory.cpp
	$(CXX1) $(CFLAGS_GCC_RELEASE) $(INC_GCC_RELEASE) -c op_type_factory.cpp -o $(OBJDIR_GCC_RELEASE)/op_type_factory.o

$(OBJDIR_GCC_RELEASE)/op_transaction.o: op_transaction.cpp
	$(CXX1) $(CFLAGS_GCC_RELEASE) $(INC_GCC_RELEASE) -c op_transaction.cpp -o $(OBJDIR_GCC_RELEASE)/op_transaction.o

$(OBJDIR_GCC_RELEASE)/op_root.o: op_root.cpp
	$(CXX1) $(CFLAGS_GCC_RELEASE) $(INC_GCC_RELEASE) -c op_root.cpp -o $(OBJDIR_GCC_RELEASE)/op_root.o

$(OBJDIR_GCC_RELEASE)/op_ptr.o: op_ptr.cpp
	$(CXX1) $(CFLAGS_GCC_RELEASE) $(INC_GCC_RELEASE) -c op_ptr.cpp -o $(OBJDIR_GCC_RELEASE)/op_ptr.o

$(OBJDIR_GCC_RELEASE)/sqlite3/sqlite3.o: sqlite3/sqlite3.c
	$(CC1) $(CFLAGS_GCC_RELEASE) $(INC_GCC_RELEASE) -c sqlite3/sqlite3.c -o $(OBJDIR_GCC_RELEASE)/sqlite3/sqlite3.o

$(OBJDIR_GCC_RELEASE)/sqValue.o: sqValue.cpp
	$(CXX1) $(CFLAGS_GCC_RELEASE) $(INC_GCC_RELEASE) -c sqValue.cpp -o $(OBJDIR_GCC_RELEASE)/sqValue.o

$(OBJDIR_GCC_RELEASE)/sqTransaction.o: sqTransaction.cpp
	$(CXX1) $(CFLAGS_GCC_RELEASE) $(INC_GCC_RELEASE) -c sqTransaction.cpp -o $(OBJDIR_GCC_RELEASE)/sqTransaction.o

$(OBJDIR_GCC_RELEASE)/sqTable.o: sqTable.cpp
	$(CXX1) $(CFLAGS_GCC_RELEASE) $(INC_GCC_RELEASE) -c sqTable.cpp -o $(OBJDIR_GCC_RELEASE)/sqTable.o

$(OBJDIR_GCC_RELEASE)/sqStatement.o: sqStatement.cpp
	$(CXX1) $(CFLAGS_GCC_RELEASE) $(INC_GCC_RELEASE) -c sqStatement.cpp -o $(OBJDIR_GCC_RELEASE)/sqStatement.o

$(OBJDIR_GCC_RELEASE)/sqRow.o: sqRow.cpp
	$(CXX1) $(CFLAGS_GCC_RELEASE) $(INC_GCC_RELEASE) -c sqRow.cpp -o $(OBJDIR_GCC_RELEASE)/sqRow.o

$(OBJDIR_GCC_RELEASE)/sqRef.o: sqRef.cpp
	$(CXX1) $(CFLAGS_GCC_RELEASE) $(INC_GCC_RELEASE) -c sqRef.cpp -o $(OBJDIR_GCC_RELEASE)/sqRef.o

$(OBJDIR_GCC_RELEASE)/sqQuery.o: sqQuery.cpp
	$(CXX1) $(CFLAGS_GCC_RELEASE) $(INC_GCC_RELEASE) -c sqQuery.cpp -o $(OBJDIR_GCC_RELEASE)/sqQuery.o

$(OBJDIR_GCC_RELEASE)/sqDatabase.o: sqDatabase.cpp
	$(CXX1) $(CFLAGS_GCC_RELEASE) $(INC_GCC_RELEASE) -c sqDatabase.cpp -o $(OBJDIR_GCC_RELEASE)/sqDatabase.o

$(OBJDIR_GCC_RELEASE)/miniz/op_miniz.o: miniz/op_miniz.cpp
	$(CXX1) $(CFLAGS_GCC_RELEASE) $(INC_GCC_RELEASE) -c miniz/op_miniz.cpp -o $(OBJDIR_GCC_RELEASE)/miniz/op_miniz.o

$(OBJDIR_GCC_RELEASE)/lzmalib/op_lzma.o: lzmalib/op_lzma.cpp
	$(CXX1) $(CFLAGS_GCC_RELEASE) $(INC_GCC_RELEASE) -c lzmalib/op_lzma.cpp -o $(OBJDIR_GCC_RELEASE)/lzmalib/op_lzma.o

$(OBJDIR_GCC_RELEASE)/lzmalib/LzmaLib.o: lzmalib/LzmaLib.c
	$(CC1) $(CFLAGS_GCC_RELEASE) $(INC_GCC_RELEASE) -c lzmalib/LzmaLib.c -o $(OBJDIR_GCC_RELEASE)/lzmalib/LzmaLib.o

$(OBJDIR_GCC_RELEASE)/lzmalib/LzmaDec.o: lzmalib/LzmaDec.c
	$(CC1) $(CFLAGS_GCC_RELEASE) $(INC_GCC_RELEASE) -c lzmalib/LzmaDec.c -o $(OBJDIR_GCC_RELEASE)/lzmalib/LzmaDec.o

$(OBJDIR_GCC_RELEASE)/lzmalib/LzFind.o: lzmalib/LzFind.c
	$(CC1) $(CFLAGS_GCC_RELEASE) $(INC_GCC_RELEASE) -c lzmalib/LzFind.c -o $(OBJDIR_GCC_RELEASE)/lzmalib/LzFind.o

$(OBJDIR_GCC_RELEASE)/lzmalib/Alloc.o: lzmalib/Alloc.c
	$(CC1) $(CFLAGS_GCC_RELEASE) $(INC_GCC_RELEASE) -c lzmalib/Alloc.c -o $(OBJDIR_GCC_RELEASE)/lzmalib/Alloc.o

$(OBJDIR_GCC_RELEASE)/op_packed.o: op_packed.cpp
	$(CXX1) $(CFLAGS_GCC_RELEASE) $(INC_GCC_RELEASE) -c op_packed.cpp -o $(OBJDIR_GCC_RELEASE)/op_packed.o

$(OBJDIR_GCC_RELEASE)/op_object.o: op_object.cpp
	$(CXX1) $(CFLAGS_GCC_RELEASE) $(INC_GCC_RELEASE) -c op_object.cpp -o $(OBJDIR_GCC_RELEASE)/op_object.o

$(OBJDIR_GCC_RELEASE)/op_new.o: op_new.cpp
	$(CXX1) $(CFLAGS_GCC_RELEASE) $(INC_GCC_RELEASE) -c op_new.cpp -o $(OBJDIR_GCC_RELEASE)/op_new.o

$(OBJDIR_GCC_RELEASE)/op_map.o: op_map.cpp
	$(CXX1) $(CFLAGS_GCC_RELEASE) $(INC_GCC_RELEASE) -c op_map.cpp -o $(OBJDIR_GCC_RELEASE)/op_map.o

$(OBJDIR_GCC_RELEASE)/op_manager.o: op_manager.cpp
	$(CXX1) $(CFLAGS_GCC_RELEASE) $(INC_GCC_RELEASE) -c op_manager.cpp -o $(OBJDIR_GCC_RELEASE)/op_manager.o

$(OBJDIR_GCC_RELEASE)/op_database.o: op_database.cpp
	$(CXX1) $(CFLAGS_GCC_RELEASE) $(INC_GCC_RELEASE) -c op_database.cpp -o $(OBJDIR_GCC_RELEASE)/op_database.o

$(OBJDIR_GCC_RELEASE)/op_class_name.o: op_class_name.cpp
	$(CXX1) $(CFLAGS_GCC_RELEASE) $(INC_GCC_RELEASE) -c op_class_name.cpp -o $(OBJDIR_GCC_RELEASE)/op_class_name.o

$(OBJDIR_GCC_RELEASE)/op_class_factory.o: op_class_factory.cpp
	$(CXX1) $(CFLAGS_GCC_RELEASE) $(INC_GCC_RELEASE) -c op_class_factory.cpp -o $(OBJDIR_GCC_RELEASE)/op_class_factory.o

clean_gcc_release: 
	rm -f $(OBJ_GCC_RELEASE) $(OUT_GCC_RELEASE)
	rm -rf .cmp/gcc/bin/Release
	rm -rf $(OBJDIR_GCC_RELEASE)
	rm -rf $(OBJDIR_GCC_RELEASE)/sqlite3
	rm -rf $(OBJDIR_GCC_RELEASE)/lzmalib
	rm -rf $(OBJDIR_GCC_RELEASE)/miniz

.PHONY: before_gcc_release after_gcc_release clean_gcc_release

